//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RealEstateSite.RealEstateSOAP {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RealEstateAPISoap", Namespace="http://tempuri.org/")]
    public partial class RealEstateAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback scalarLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback scalarUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback scalarEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHouseByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVisitedOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFeedbackedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback addOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBuyerNotiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBuyerNotiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSellerNotiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSellerNotiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoomsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeedbackSellerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfferSellerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SellerUpdateOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHomeOwnereOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfferSellerByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVisitSellerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RealEstateAPI() {
            this.Url = global::RealEstateSite.Properties.Settings.Default.RealEstateSite_RealEstateSOAP_RealEstateAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event scalarLoginCompletedEventHandler scalarLoginCompleted;
        
        /// <remarks/>
        public event scalarUsernameCompletedEventHandler scalarUsernameCompleted;
        
        /// <remarks/>
        public event GetNameCompletedEventHandler GetNameCompleted;
        
        /// <remarks/>
        public event scalarEmailCompletedEventHandler scalarEmailCompleted;
        
        /// <remarks/>
        public event accountUpdateCompletedEventHandler accountUpdateCompleted;
        
        /// <remarks/>
        public event getQuestionCompletedEventHandler getQuestionCompleted;
        
        /// <remarks/>
        public event updatePasswordCompletedEventHandler updatePasswordCompleted;
        
        /// <remarks/>
        public event GetRoleCompletedEventHandler GetRoleCompleted;
        
        /// <remarks/>
        public event getHouseCompletedEventHandler getHouseCompleted;
        
        /// <remarks/>
        public event getHouseByIDCompletedEventHandler getHouseByIDCompleted;
        
        /// <remarks/>
        public event insertVisitCompletedEventHandler insertVisitCompleted;
        
        /// <remarks/>
        public event checkVisitCompletedEventHandler checkVisitCompleted;
        
        /// <remarks/>
        public event getVisitCompletedEventHandler getVisitCompleted;
        
        /// <remarks/>
        public event DeleteVisitCompletedEventHandler DeleteVisitCompleted;
        
        /// <remarks/>
        public event updateVisitCompletedEventHandler updateVisitCompleted;
        
        /// <remarks/>
        public event getVisitedCompletedEventHandler getVisitedCompleted;
        
        /// <remarks/>
        public event addFeedbackCompletedEventHandler addFeedbackCompleted;
        
        /// <remarks/>
        public event getFeedbackedCompletedEventHandler getFeedbackedCompleted;
        
        /// <remarks/>
        public event CheckFeedbackCompletedEventHandler CheckFeedbackCompleted;
        
        /// <remarks/>
        public event addOfferCompletedEventHandler addOfferCompleted;
        
        /// <remarks/>
        public event GetOfferCompletedEventHandler GetOfferCompleted;
        
        /// <remarks/>
        public event updateFeedbackCompletedEventHandler updateFeedbackCompleted;
        
        /// <remarks/>
        public event GetBuyerNotiCompletedEventHandler GetBuyerNotiCompleted;
        
        /// <remarks/>
        public event UpdateBuyerNotiCompletedEventHandler UpdateBuyerNotiCompleted;
        
        /// <remarks/>
        public event GetSellerNotiCompletedEventHandler GetSellerNotiCompleted;
        
        /// <remarks/>
        public event UpdateSellerNotiCompletedEventHandler UpdateSellerNotiCompleted;
        
        /// <remarks/>
        public event GetRoomsCompletedEventHandler GetRoomsCompleted;
        
        /// <remarks/>
        public event GetFeedbackSellerCompletedEventHandler GetFeedbackSellerCompleted;
        
        /// <remarks/>
        public event GetOfferSellerCompletedEventHandler GetOfferSellerCompleted;
        
        /// <remarks/>
        public event SellerUpdateOfferCompletedEventHandler SellerUpdateOfferCompleted;
        
        /// <remarks/>
        public event UpdateHomeOwnereCompletedEventHandler UpdateHomeOwnereCompleted;
        
        /// <remarks/>
        public event GetOfferSellerByIdCompletedEventHandler GetOfferSellerByIdCompleted;
        
        /// <remarks/>
        public event CheckOfferCompletedEventHandler CheckOfferCompleted;
        
        /// <remarks/>
        public event GetVisitSellerCompletedEventHandler GetVisitSellerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/scalarLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int scalarLogin(User user) {
            object[] results = this.Invoke("scalarLogin", new object[] {
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void scalarLoginAsync(User user) {
            this.scalarLoginAsync(user, null);
        }
        
        /// <remarks/>
        public void scalarLoginAsync(User user, object userState) {
            if ((this.scalarLoginOperationCompleted == null)) {
                this.scalarLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscalarLoginOperationCompleted);
            }
            this.InvokeAsync("scalarLogin", new object[] {
                        user}, this.scalarLoginOperationCompleted, userState);
        }
        
        private void OnscalarLoginOperationCompleted(object arg) {
            if ((this.scalarLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scalarLoginCompleted(this, new scalarLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/scalarUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int scalarUsername(User user) {
            object[] results = this.Invoke("scalarUsername", new object[] {
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void scalarUsernameAsync(User user) {
            this.scalarUsernameAsync(user, null);
        }
        
        /// <remarks/>
        public void scalarUsernameAsync(User user, object userState) {
            if ((this.scalarUsernameOperationCompleted == null)) {
                this.scalarUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscalarUsernameOperationCompleted);
            }
            this.InvokeAsync("scalarUsername", new object[] {
                        user}, this.scalarUsernameOperationCompleted, userState);
        }
        
        private void OnscalarUsernameOperationCompleted(object arg) {
            if ((this.scalarUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scalarUsernameCompleted(this, new scalarUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetName(string username, string role) {
            object[] results = this.Invoke("GetName", new object[] {
                        username,
                        role});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNameAsync(string username, string role) {
            this.GetNameAsync(username, role, null);
        }
        
        /// <remarks/>
        public void GetNameAsync(string username, string role, object userState) {
            if ((this.GetNameOperationCompleted == null)) {
                this.GetNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNameOperationCompleted);
            }
            this.InvokeAsync("GetName", new object[] {
                        username,
                        role}, this.GetNameOperationCompleted, userState);
        }
        
        private void OnGetNameOperationCompleted(object arg) {
            if ((this.GetNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNameCompleted(this, new GetNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/scalarEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int scalarEmail(User user) {
            object[] results = this.Invoke("scalarEmail", new object[] {
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void scalarEmailAsync(User user) {
            this.scalarEmailAsync(user, null);
        }
        
        /// <remarks/>
        public void scalarEmailAsync(User user, object userState) {
            if ((this.scalarEmailOperationCompleted == null)) {
                this.scalarEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscalarEmailOperationCompleted);
            }
            this.InvokeAsync("scalarEmail", new object[] {
                        user}, this.scalarEmailOperationCompleted, userState);
        }
        
        private void OnscalarEmailOperationCompleted(object arg) {
            if ((this.scalarEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scalarEmailCompleted(this, new scalarEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/accountUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void accountUpdate(User user) {
            this.Invoke("accountUpdate", new object[] {
                        user});
        }
        
        /// <remarks/>
        public void accountUpdateAsync(User user) {
            this.accountUpdateAsync(user, null);
        }
        
        /// <remarks/>
        public void accountUpdateAsync(User user, object userState) {
            if ((this.accountUpdateOperationCompleted == null)) {
                this.accountUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountUpdateOperationCompleted);
            }
            this.InvokeAsync("accountUpdate", new object[] {
                        user}, this.accountUpdateOperationCompleted, userState);
        }
        
        private void OnaccountUpdateOperationCompleted(object arg) {
            if ((this.accountUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getQuestion(string email, string role) {
            object[] results = this.Invoke("getQuestion", new object[] {
                        email,
                        role});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getQuestionAsync(string email, string role) {
            this.getQuestionAsync(email, role, null);
        }
        
        /// <remarks/>
        public void getQuestionAsync(string email, string role, object userState) {
            if ((this.getQuestionOperationCompleted == null)) {
                this.getQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuestionOperationCompleted);
            }
            this.InvokeAsync("getQuestion", new object[] {
                        email,
                        role}, this.getQuestionOperationCompleted, userState);
        }
        
        private void OngetQuestionOperationCompleted(object arg) {
            if ((this.getQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuestionCompleted(this, new getQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatePassword(string email, string role, string password) {
            this.Invoke("updatePassword", new object[] {
                        email,
                        role,
                        password});
        }
        
        /// <remarks/>
        public void updatePasswordAsync(string email, string role, string password) {
            this.updatePasswordAsync(email, role, password, null);
        }
        
        /// <remarks/>
        public void updatePasswordAsync(string email, string role, string password, object userState) {
            if ((this.updatePasswordOperationCompleted == null)) {
                this.updatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePasswordOperationCompleted);
            }
            this.InvokeAsync("updatePassword", new object[] {
                        email,
                        role,
                        password}, this.updatePasswordOperationCompleted, userState);
        }
        
        private void OnupdatePasswordOperationCompleted(object arg) {
            if ((this.updatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRole(string username) {
            object[] results = this.Invoke("GetRole", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleAsync(string username) {
            this.GetRoleAsync(username, null);
        }
        
        /// <remarks/>
        public void GetRoleAsync(string username, object userState) {
            if ((this.GetRoleOperationCompleted == null)) {
                this.GetRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleOperationCompleted);
            }
            this.InvokeAsync("GetRole", new object[] {
                        username}, this.GetRoleOperationCompleted, userState);
        }
        
        private void OnGetRoleOperationCompleted(object arg) {
            if ((this.GetRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleCompleted(this, new GetRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getHouse(string location, int minPrice, int maxPrice, string property, string garage, int minSize, int maxSize, string amenity, string utility, string username) {
            object[] results = this.Invoke("getHouse", new object[] {
                        location,
                        minPrice,
                        maxPrice,
                        property,
                        garage,
                        minSize,
                        maxSize,
                        amenity,
                        utility,
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getHouseAsync(string location, int minPrice, int maxPrice, string property, string garage, int minSize, int maxSize, string amenity, string utility, string username) {
            this.getHouseAsync(location, minPrice, maxPrice, property, garage, minSize, maxSize, amenity, utility, username, null);
        }
        
        /// <remarks/>
        public void getHouseAsync(string location, int minPrice, int maxPrice, string property, string garage, int minSize, int maxSize, string amenity, string utility, string username, object userState) {
            if ((this.getHouseOperationCompleted == null)) {
                this.getHouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHouseOperationCompleted);
            }
            this.InvokeAsync("getHouse", new object[] {
                        location,
                        minPrice,
                        maxPrice,
                        property,
                        garage,
                        minSize,
                        maxSize,
                        amenity,
                        utility,
                        username}, this.getHouseOperationCompleted, userState);
        }
        
        private void OngetHouseOperationCompleted(object arg) {
            if ((this.getHouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHouseCompleted(this, new getHouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHouseByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getHouseByID(string homeID) {
            object[] results = this.Invoke("getHouseByID", new object[] {
                        homeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getHouseByIDAsync(string homeID) {
            this.getHouseByIDAsync(homeID, null);
        }
        
        /// <remarks/>
        public void getHouseByIDAsync(string homeID, object userState) {
            if ((this.getHouseByIDOperationCompleted == null)) {
                this.getHouseByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHouseByIDOperationCompleted);
            }
            this.InvokeAsync("getHouseByID", new object[] {
                        homeID}, this.getHouseByIDOperationCompleted, userState);
        }
        
        private void OngetHouseByIDOperationCompleted(object arg) {
            if ((this.getHouseByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHouseByIDCompleted(this, new getHouseByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertVisit(visitRequest request) {
            this.Invoke("insertVisit", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void insertVisitAsync(visitRequest request) {
            this.insertVisitAsync(request, null);
        }
        
        /// <remarks/>
        public void insertVisitAsync(visitRequest request, object userState) {
            if ((this.insertVisitOperationCompleted == null)) {
                this.insertVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertVisitOperationCompleted);
            }
            this.InvokeAsync("insertVisit", new object[] {
                        request}, this.insertVisitOperationCompleted, userState);
        }
        
        private void OninsertVisitOperationCompleted(object arg) {
            if ((this.insertVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertVisitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkVisit(visitRequest request) {
            object[] results = this.Invoke("checkVisit", new object[] {
                        request});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkVisitAsync(visitRequest request) {
            this.checkVisitAsync(request, null);
        }
        
        /// <remarks/>
        public void checkVisitAsync(visitRequest request, object userState) {
            if ((this.checkVisitOperationCompleted == null)) {
                this.checkVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckVisitOperationCompleted);
            }
            this.InvokeAsync("checkVisit", new object[] {
                        request}, this.checkVisitOperationCompleted, userState);
        }
        
        private void OncheckVisitOperationCompleted(object arg) {
            if ((this.checkVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkVisitCompleted(this, new checkVisitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getVisit(string username, string status) {
            object[] results = this.Invoke("getVisit", new object[] {
                        username,
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getVisitAsync(string username, string status) {
            this.getVisitAsync(username, status, null);
        }
        
        /// <remarks/>
        public void getVisitAsync(string username, string status, object userState) {
            if ((this.getVisitOperationCompleted == null)) {
                this.getVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVisitOperationCompleted);
            }
            this.InvokeAsync("getVisit", new object[] {
                        username,
                        status}, this.getVisitOperationCompleted, userState);
        }
        
        private void OngetVisitOperationCompleted(object arg) {
            if ((this.getVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVisitCompleted(this, new getVisitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteVisit(visitRequest request) {
            this.Invoke("DeleteVisit", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void DeleteVisitAsync(visitRequest request) {
            this.DeleteVisitAsync(request, null);
        }
        
        /// <remarks/>
        public void DeleteVisitAsync(visitRequest request, object userState) {
            if ((this.DeleteVisitOperationCompleted == null)) {
                this.DeleteVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVisitOperationCompleted);
            }
            this.InvokeAsync("DeleteVisit", new object[] {
                        request}, this.DeleteVisitOperationCompleted, userState);
        }
        
        private void OnDeleteVisitOperationCompleted(object arg) {
            if ((this.DeleteVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVisitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateVisit(string username, string status, string homeid) {
            this.Invoke("updateVisit", new object[] {
                        username,
                        status,
                        homeid});
        }
        
        /// <remarks/>
        public void updateVisitAsync(string username, string status, string homeid) {
            this.updateVisitAsync(username, status, homeid, null);
        }
        
        /// <remarks/>
        public void updateVisitAsync(string username, string status, string homeid, object userState) {
            if ((this.updateVisitOperationCompleted == null)) {
                this.updateVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateVisitOperationCompleted);
            }
            this.InvokeAsync("updateVisit", new object[] {
                        username,
                        status,
                        homeid}, this.updateVisitOperationCompleted, userState);
        }
        
        private void OnupdateVisitOperationCompleted(object arg) {
            if ((this.updateVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateVisitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getVisited", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getVisited(string username, string status) {
            object[] results = this.Invoke("getVisited", new object[] {
                        username,
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getVisitedAsync(string username, string status) {
            this.getVisitedAsync(username, status, null);
        }
        
        /// <remarks/>
        public void getVisitedAsync(string username, string status, object userState) {
            if ((this.getVisitedOperationCompleted == null)) {
                this.getVisitedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVisitedOperationCompleted);
            }
            this.InvokeAsync("getVisited", new object[] {
                        username,
                        status}, this.getVisitedOperationCompleted, userState);
        }
        
        private void OngetVisitedOperationCompleted(object arg) {
            if ((this.getVisitedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVisitedCompleted(this, new getVisitedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addFeedback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addFeedback(int homeid, string buyer, string buyername, string a1, string a2, string a3, string a4) {
            this.Invoke("addFeedback", new object[] {
                        homeid,
                        buyer,
                        buyername,
                        a1,
                        a2,
                        a3,
                        a4});
        }
        
        /// <remarks/>
        public void addFeedbackAsync(int homeid, string buyer, string buyername, string a1, string a2, string a3, string a4) {
            this.addFeedbackAsync(homeid, buyer, buyername, a1, a2, a3, a4, null);
        }
        
        /// <remarks/>
        public void addFeedbackAsync(int homeid, string buyer, string buyername, string a1, string a2, string a3, string a4, object userState) {
            if ((this.addFeedbackOperationCompleted == null)) {
                this.addFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFeedbackOperationCompleted);
            }
            this.InvokeAsync("addFeedback", new object[] {
                        homeid,
                        buyer,
                        buyername,
                        a1,
                        a2,
                        a3,
                        a4}, this.addFeedbackOperationCompleted, userState);
        }
        
        private void OnaddFeedbackOperationCompleted(object arg) {
            if ((this.addFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFeedbackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFeedbacked", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFeedbacked(string buyer, string status) {
            object[] results = this.Invoke("getFeedbacked", new object[] {
                        buyer,
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFeedbackedAsync(string buyer, string status) {
            this.getFeedbackedAsync(buyer, status, null);
        }
        
        /// <remarks/>
        public void getFeedbackedAsync(string buyer, string status, object userState) {
            if ((this.getFeedbackedOperationCompleted == null)) {
                this.getFeedbackedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFeedbackedOperationCompleted);
            }
            this.InvokeAsync("getFeedbacked", new object[] {
                        buyer,
                        status}, this.getFeedbackedOperationCompleted, userState);
        }
        
        private void OngetFeedbackedOperationCompleted(object arg) {
            if ((this.getFeedbackedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFeedbackedCompleted(this, new getFeedbackedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFeedback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckFeedback(string username, int id) {
            object[] results = this.Invoke("CheckFeedback", new object[] {
                        username,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFeedbackAsync(string username, int id) {
            this.CheckFeedbackAsync(username, id, null);
        }
        
        /// <remarks/>
        public void CheckFeedbackAsync(string username, int id, object userState) {
            if ((this.CheckFeedbackOperationCompleted == null)) {
                this.CheckFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFeedbackOperationCompleted);
            }
            this.InvokeAsync("CheckFeedback", new object[] {
                        username,
                        id}, this.CheckFeedbackOperationCompleted, userState);
        }
        
        private void OnCheckFeedbackOperationCompleted(object arg) {
            if ((this.CheckFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFeedbackCompleted(this, new CheckFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addOffer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addOffer(OfferBuyer offer) {
            this.Invoke("addOffer", new object[] {
                        offer});
        }
        
        /// <remarks/>
        public void addOfferAsync(OfferBuyer offer) {
            this.addOfferAsync(offer, null);
        }
        
        /// <remarks/>
        public void addOfferAsync(OfferBuyer offer, object userState) {
            if ((this.addOfferOperationCompleted == null)) {
                this.addOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOfferOperationCompleted);
            }
            this.InvokeAsync("addOffer", new object[] {
                        offer}, this.addOfferOperationCompleted, userState);
        }
        
        private void OnaddOfferOperationCompleted(object arg) {
            if ((this.addOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addOfferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOffer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOffer(string username, string status) {
            object[] results = this.Invoke("GetOffer", new object[] {
                        username,
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOfferAsync(string username, string status) {
            this.GetOfferAsync(username, status, null);
        }
        
        /// <remarks/>
        public void GetOfferAsync(string username, string status, object userState) {
            if ((this.GetOfferOperationCompleted == null)) {
                this.GetOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfferOperationCompleted);
            }
            this.InvokeAsync("GetOffer", new object[] {
                        username,
                        status}, this.GetOfferOperationCompleted, userState);
        }
        
        private void OnGetOfferOperationCompleted(object arg) {
            if ((this.GetOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfferCompleted(this, new GetOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateFeedback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateFeedback(int homeid, string buyer, string status) {
            this.Invoke("updateFeedback", new object[] {
                        homeid,
                        buyer,
                        status});
        }
        
        /// <remarks/>
        public void updateFeedbackAsync(int homeid, string buyer, string status) {
            this.updateFeedbackAsync(homeid, buyer, status, null);
        }
        
        /// <remarks/>
        public void updateFeedbackAsync(int homeid, string buyer, string status, object userState) {
            if ((this.updateFeedbackOperationCompleted == null)) {
                this.updateFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFeedbackOperationCompleted);
            }
            this.InvokeAsync("updateFeedback", new object[] {
                        homeid,
                        buyer,
                        status}, this.updateFeedbackOperationCompleted, userState);
        }
        
        private void OnupdateFeedbackOperationCompleted(object arg) {
            if ((this.updateFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFeedbackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBuyerNoti", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBuyerNoti(string username, string status, int buyerstatus) {
            object[] results = this.Invoke("GetBuyerNoti", new object[] {
                        username,
                        status,
                        buyerstatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBuyerNotiAsync(string username, string status, int buyerstatus) {
            this.GetBuyerNotiAsync(username, status, buyerstatus, null);
        }
        
        /// <remarks/>
        public void GetBuyerNotiAsync(string username, string status, int buyerstatus, object userState) {
            if ((this.GetBuyerNotiOperationCompleted == null)) {
                this.GetBuyerNotiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBuyerNotiOperationCompleted);
            }
            this.InvokeAsync("GetBuyerNoti", new object[] {
                        username,
                        status,
                        buyerstatus}, this.GetBuyerNotiOperationCompleted, userState);
        }
        
        private void OnGetBuyerNotiOperationCompleted(object arg) {
            if ((this.GetBuyerNotiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBuyerNotiCompleted(this, new GetBuyerNotiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBuyerNoti", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBuyerNoti(string username, string status, int buyerstatus) {
            this.Invoke("UpdateBuyerNoti", new object[] {
                        username,
                        status,
                        buyerstatus});
        }
        
        /// <remarks/>
        public void UpdateBuyerNotiAsync(string username, string status, int buyerstatus) {
            this.UpdateBuyerNotiAsync(username, status, buyerstatus, null);
        }
        
        /// <remarks/>
        public void UpdateBuyerNotiAsync(string username, string status, int buyerstatus, object userState) {
            if ((this.UpdateBuyerNotiOperationCompleted == null)) {
                this.UpdateBuyerNotiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBuyerNotiOperationCompleted);
            }
            this.InvokeAsync("UpdateBuyerNoti", new object[] {
                        username,
                        status,
                        buyerstatus}, this.UpdateBuyerNotiOperationCompleted, userState);
        }
        
        private void OnUpdateBuyerNotiOperationCompleted(object arg) {
            if ((this.UpdateBuyerNotiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBuyerNotiCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSellerNoti", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSellerNoti(string username, string status, int sellerstatus) {
            object[] results = this.Invoke("GetSellerNoti", new object[] {
                        username,
                        status,
                        sellerstatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSellerNotiAsync(string username, string status, int sellerstatus) {
            this.GetSellerNotiAsync(username, status, sellerstatus, null);
        }
        
        /// <remarks/>
        public void GetSellerNotiAsync(string username, string status, int sellerstatus, object userState) {
            if ((this.GetSellerNotiOperationCompleted == null)) {
                this.GetSellerNotiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSellerNotiOperationCompleted);
            }
            this.InvokeAsync("GetSellerNoti", new object[] {
                        username,
                        status,
                        sellerstatus}, this.GetSellerNotiOperationCompleted, userState);
        }
        
        private void OnGetSellerNotiOperationCompleted(object arg) {
            if ((this.GetSellerNotiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSellerNotiCompleted(this, new GetSellerNotiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSellerNoti", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSellerNoti(string username, string status, int sellerstatus) {
            this.Invoke("UpdateSellerNoti", new object[] {
                        username,
                        status,
                        sellerstatus});
        }
        
        /// <remarks/>
        public void UpdateSellerNotiAsync(string username, string status, int sellerstatus) {
            this.UpdateSellerNotiAsync(username, status, sellerstatus, null);
        }
        
        /// <remarks/>
        public void UpdateSellerNotiAsync(string username, string status, int sellerstatus, object userState) {
            if ((this.UpdateSellerNotiOperationCompleted == null)) {
                this.UpdateSellerNotiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSellerNotiOperationCompleted);
            }
            this.InvokeAsync("UpdateSellerNoti", new object[] {
                        username,
                        status,
                        sellerstatus}, this.UpdateSellerNotiOperationCompleted, userState);
        }
        
        private void OnUpdateSellerNotiOperationCompleted(object arg) {
            if ((this.UpdateSellerNotiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSellerNotiCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRooms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRooms(int id) {
            object[] results = this.Invoke("GetRooms", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoomsAsync(int id) {
            this.GetRoomsAsync(id, null);
        }
        
        /// <remarks/>
        public void GetRoomsAsync(int id, object userState) {
            if ((this.GetRoomsOperationCompleted == null)) {
                this.GetRoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoomsOperationCompleted);
            }
            this.InvokeAsync("GetRooms", new object[] {
                        id}, this.GetRoomsOperationCompleted, userState);
        }
        
        private void OnGetRoomsOperationCompleted(object arg) {
            if ((this.GetRoomsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoomsCompleted(this, new GetRoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFeedbackSeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeedbackSeller(string username) {
            object[] results = this.Invoke("GetFeedbackSeller", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeedbackSellerAsync(string username) {
            this.GetFeedbackSellerAsync(username, null);
        }
        
        /// <remarks/>
        public void GetFeedbackSellerAsync(string username, object userState) {
            if ((this.GetFeedbackSellerOperationCompleted == null)) {
                this.GetFeedbackSellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedbackSellerOperationCompleted);
            }
            this.InvokeAsync("GetFeedbackSeller", new object[] {
                        username}, this.GetFeedbackSellerOperationCompleted, userState);
        }
        
        private void OnGetFeedbackSellerOperationCompleted(object arg) {
            if ((this.GetFeedbackSellerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedbackSellerCompleted(this, new GetFeedbackSellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOfferSeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOfferSeller(string username, string status) {
            object[] results = this.Invoke("GetOfferSeller", new object[] {
                        username,
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOfferSellerAsync(string username, string status) {
            this.GetOfferSellerAsync(username, status, null);
        }
        
        /// <remarks/>
        public void GetOfferSellerAsync(string username, string status, object userState) {
            if ((this.GetOfferSellerOperationCompleted == null)) {
                this.GetOfferSellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfferSellerOperationCompleted);
            }
            this.InvokeAsync("GetOfferSeller", new object[] {
                        username,
                        status}, this.GetOfferSellerOperationCompleted, userState);
        }
        
        private void OnGetOfferSellerOperationCompleted(object arg) {
            if ((this.GetOfferSellerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfferSellerCompleted(this, new GetOfferSellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SellerUpdateOffer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SellerUpdateOffer(int id, string username, string status) {
            this.Invoke("SellerUpdateOffer", new object[] {
                        id,
                        username,
                        status});
        }
        
        /// <remarks/>
        public void SellerUpdateOfferAsync(int id, string username, string status) {
            this.SellerUpdateOfferAsync(id, username, status, null);
        }
        
        /// <remarks/>
        public void SellerUpdateOfferAsync(int id, string username, string status, object userState) {
            if ((this.SellerUpdateOfferOperationCompleted == null)) {
                this.SellerUpdateOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSellerUpdateOfferOperationCompleted);
            }
            this.InvokeAsync("SellerUpdateOffer", new object[] {
                        id,
                        username,
                        status}, this.SellerUpdateOfferOperationCompleted, userState);
        }
        
        private void OnSellerUpdateOfferOperationCompleted(object arg) {
            if ((this.SellerUpdateOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SellerUpdateOfferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHomeOwnere", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateHomeOwnere(int id, string username, string status) {
            this.Invoke("UpdateHomeOwnere", new object[] {
                        id,
                        username,
                        status});
        }
        
        /// <remarks/>
        public void UpdateHomeOwnereAsync(int id, string username, string status) {
            this.UpdateHomeOwnereAsync(id, username, status, null);
        }
        
        /// <remarks/>
        public void UpdateHomeOwnereAsync(int id, string username, string status, object userState) {
            if ((this.UpdateHomeOwnereOperationCompleted == null)) {
                this.UpdateHomeOwnereOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHomeOwnereOperationCompleted);
            }
            this.InvokeAsync("UpdateHomeOwnere", new object[] {
                        id,
                        username,
                        status}, this.UpdateHomeOwnereOperationCompleted, userState);
        }
        
        private void OnUpdateHomeOwnereOperationCompleted(object arg) {
            if ((this.UpdateHomeOwnereCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHomeOwnereCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOfferSellerById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOfferSellerById(string username, int id) {
            object[] results = this.Invoke("GetOfferSellerById", new object[] {
                        username,
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOfferSellerByIdAsync(string username, int id) {
            this.GetOfferSellerByIdAsync(username, id, null);
        }
        
        /// <remarks/>
        public void GetOfferSellerByIdAsync(string username, int id, object userState) {
            if ((this.GetOfferSellerByIdOperationCompleted == null)) {
                this.GetOfferSellerByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfferSellerByIdOperationCompleted);
            }
            this.InvokeAsync("GetOfferSellerById", new object[] {
                        username,
                        id}, this.GetOfferSellerByIdOperationCompleted, userState);
        }
        
        private void OnGetOfferSellerByIdOperationCompleted(object arg) {
            if ((this.GetOfferSellerByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfferSellerByIdCompleted(this, new GetOfferSellerByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOffer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckOffer(string username, int id, string status) {
            object[] results = this.Invoke("CheckOffer", new object[] {
                        username,
                        id,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOfferAsync(string username, int id, string status) {
            this.CheckOfferAsync(username, id, status, null);
        }
        
        /// <remarks/>
        public void CheckOfferAsync(string username, int id, string status, object userState) {
            if ((this.CheckOfferOperationCompleted == null)) {
                this.CheckOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOfferOperationCompleted);
            }
            this.InvokeAsync("CheckOffer", new object[] {
                        username,
                        id,
                        status}, this.CheckOfferOperationCompleted, userState);
        }
        
        private void OnCheckOfferOperationCompleted(object arg) {
            if ((this.CheckOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOfferCompleted(this, new CheckOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVisitSeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVisitSeller(string username) {
            object[] results = this.Invoke("GetVisitSeller", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVisitSellerAsync(string username) {
            this.GetVisitSellerAsync(username, null);
        }
        
        /// <remarks/>
        public void GetVisitSellerAsync(string username, object userState) {
            if ((this.GetVisitSellerOperationCompleted == null)) {
                this.GetVisitSellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVisitSellerOperationCompleted);
            }
            this.InvokeAsync("GetVisitSeller", new object[] {
                        username}, this.GetVisitSellerOperationCompleted, userState);
        }
        
        private void OnGetVisitSellerOperationCompleted(object arg) {
            if ((this.GetVisitSellerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVisitSellerCompleted(this, new GetVisitSellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private string usernameField;
        
        private string roleField;
        
        private string fullNameField;
        
        private string emailField;
        
        private string passwordField;
        
        private string phoneField;
        
        private string q1Field;
        
        private string q2Field;
        
        private string q3Field;
        
        private string a1Field;
        
        private string a2Field;
        
        private string a3Field;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Q1 {
            get {
                return this.q1Field;
            }
            set {
                this.q1Field = value;
            }
        }
        
        /// <remarks/>
        public string Q2 {
            get {
                return this.q2Field;
            }
            set {
                this.q2Field = value;
            }
        }
        
        /// <remarks/>
        public string Q3 {
            get {
                return this.q3Field;
            }
            set {
                this.q3Field = value;
            }
        }
        
        /// <remarks/>
        public string A1 {
            get {
                return this.a1Field;
            }
            set {
                this.a1Field = value;
            }
        }
        
        /// <remarks/>
        public string A2 {
            get {
                return this.a2Field;
            }
            set {
                this.a2Field = value;
            }
        }
        
        /// <remarks/>
        public string A3 {
            get {
                return this.a3Field;
            }
            set {
                this.a3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OfferBuyer {
        
        private int homeidField;
        
        private string buyerField;
        
        private string buyernameField;
        
        private int a1Field;
        
        private string a2Field;
        
        private string a3Field;
        
        private string statusField;
        
        private int sellerStatusField;
        
        private int buyerStatusField;
        
        /// <remarks/>
        public int homeid {
            get {
                return this.homeidField;
            }
            set {
                this.homeidField = value;
            }
        }
        
        /// <remarks/>
        public string buyer {
            get {
                return this.buyerField;
            }
            set {
                this.buyerField = value;
            }
        }
        
        /// <remarks/>
        public string buyername {
            get {
                return this.buyernameField;
            }
            set {
                this.buyernameField = value;
            }
        }
        
        /// <remarks/>
        public int a1 {
            get {
                return this.a1Field;
            }
            set {
                this.a1Field = value;
            }
        }
        
        /// <remarks/>
        public string a2 {
            get {
                return this.a2Field;
            }
            set {
                this.a2Field = value;
            }
        }
        
        /// <remarks/>
        public string a3 {
            get {
                return this.a3Field;
            }
            set {
                this.a3Field = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int sellerStatus {
            get {
                return this.sellerStatusField;
            }
            set {
                this.sellerStatusField = value;
            }
        }
        
        /// <remarks/>
        public int buyerStatus {
            get {
                return this.buyerStatusField;
            }
            set {
                this.buyerStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class visitRequest {
        
        private int homeidField;
        
        private string buyerField;
        
        private string buyerNameField;
        
        private string dateField;
        
        private string timeField;
        
        private string statusField;
        
        /// <remarks/>
        public int homeid {
            get {
                return this.homeidField;
            }
            set {
                this.homeidField = value;
            }
        }
        
        /// <remarks/>
        public string buyer {
            get {
                return this.buyerField;
            }
            set {
                this.buyerField = value;
            }
        }
        
        /// <remarks/>
        public string buyerName {
            get {
                return this.buyerNameField;
            }
            set {
                this.buyerNameField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void scalarLoginCompletedEventHandler(object sender, scalarLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scalarLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal scalarLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void scalarUsernameCompletedEventHandler(object sender, scalarUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scalarUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal scalarUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetNameCompletedEventHandler(object sender, GetNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void scalarEmailCompletedEventHandler(object sender, scalarEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scalarEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal scalarEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void accountUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getQuestionCompletedEventHandler(object sender, getQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updatePasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRoleCompletedEventHandler(object sender, GetRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getHouseCompletedEventHandler(object sender, getHouseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getHouseByIDCompletedEventHandler(object sender, getHouseByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHouseByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHouseByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void insertVisitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void checkVisitCompletedEventHandler(object sender, checkVisitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkVisitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkVisitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getVisitCompletedEventHandler(object sender, getVisitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVisitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVisitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteVisitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateVisitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getVisitedCompletedEventHandler(object sender, getVisitedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVisitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVisitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addFeedbackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getFeedbackedCompletedEventHandler(object sender, getFeedbackedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFeedbackedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFeedbackedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckFeedbackCompletedEventHandler(object sender, CheckFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addOfferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOfferCompletedEventHandler(object sender, GetOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateFeedbackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetBuyerNotiCompletedEventHandler(object sender, GetBuyerNotiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBuyerNotiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBuyerNotiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateBuyerNotiCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSellerNotiCompletedEventHandler(object sender, GetSellerNotiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSellerNotiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSellerNotiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateSellerNotiCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRoomsCompletedEventHandler(object sender, GetRoomsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFeedbackSellerCompletedEventHandler(object sender, GetFeedbackSellerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedbackSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeedbackSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOfferSellerCompletedEventHandler(object sender, GetOfferSellerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfferSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfferSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SellerUpdateOfferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateHomeOwnereCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOfferSellerByIdCompletedEventHandler(object sender, GetOfferSellerByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfferSellerByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfferSellerByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckOfferCompletedEventHandler(object sender, CheckOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetVisitSellerCompletedEventHandler(object sender, GetVisitSellerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVisitSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVisitSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591